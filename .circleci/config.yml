version: 2.1

orbs:
  helm: circleci/helm@1.2.0
  kubernetes: circleci/kubernetes@0.11.2
  terraform: circleci/terraform@2.0.1
  node: circleci/node@4.7.0

workflows:
  BTD:
    jobs:
      - test
      - build_docker:
          requires:
            - test
      - deploy_linode:
          requires:
            - build_docker

jobs:
  test:
    executor: node
    steps:
      - checkout
      - node/install-packages
      - run:
          command: npm run test  
  build_docker:
    executor: node
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          name: Build Docker image
          command: |
            docker build -t $DOCKER_REPOSITORY:$CIRCLE_SHA1 .
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
            docker push $DOCKER_REPOSITORY:$CIRCLE_SHA1
  deploy_linode:
    executor: python
    steps:
      - checkout
      - kubernetes/install-kubectl
      - run:
          name: Set up LKE kubeconfig
          command: |
            export DECODED_TOKEN=$(echo ${TOKEN} | base64 -d)
            echo $CA_CERT | base64 -d > ca.crt
            kubectl config set-cluster sa-demo --server=${SERVER_ENDPOINT} --certificate-authority=ca.crt
            kubectl config set-credentials sa-demo --token=${DECODED_TOKEN}
            kubectl config set-context cci --user=sa-demo --cluster=sa-demo
            kubectl config use-context cci
      - helm/install-helm-client:
          version: v3.0.0
      - helm/upgrade-helm-chart:
          chart: ./helm-charts/react-app
          release-name: deployment-demo
          no-output-timeout: 5m
          values-to-override: image.tag=${CIRCLE_SHA1},image.repository=${DOCKER_REPOSITORY} 
      - run: 
          name: Test kubectl
          command: |
            kubectl get services
            kubectl get pods

executors:
  node:
    docker: 
      - image: cimg/node:14.0.0
  python:
    docker:
      - image: cimg/python:3.9.5